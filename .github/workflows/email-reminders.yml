name: Maintenance Email Reminders

on:
  schedule:
    - cron: '0 12 * * *'  # Runs daily at 12:00 PM UTC
  workflow_dispatch:  # Allows manual trigger

jobs:
  check-maintenance:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Create Reminder Script
        run: |
          cat > check-maintenance.js << 'EOL'
          const admin = require('firebase-admin');
          const nodemailer = require('nodemailer');

          const serviceAccount = JSON.parse(process.env.FIREBASE_SERVICE_ACCOUNT);
          admin.initializeApp({
            credential: admin.credential.cert(serviceAccount)
          });

          const transporter = nodemailer.createTransport({
            service: 'gmail',
            auth: {
              user: 'myhomeeventssystem@gmail.com',
              pass: process.env.GMAIL_APP_PASSWORD
            }
          });

          async function checkMaintenance() {
            const db = admin.firestore();
            const now = new Date();  // Today's date

            try {
              // Fetch all documents in the 'maintenance' collection
              const snapshot = await db.collection('serviceRecords').get();
              console.log(`Found ${snapshot.size} documents.`);

              for (const doc of snapshot.docs) {
                const maintenance = doc.data();

                if (!maintenance.follow_up_date) {
                  console.log(`Skipping record ${doc.id} as follow-up date is missing.`);
                  continue;  // Skip documents without follow-up dates
                }

                // Calculate the reminder date (follow-up date minus 60 days)
                const followUpDate = new Date(maintenance.follow_up_date);
                const reminderDate = new Date(followUpDate);
                reminderDate.setDate(reminderDate.getDate() - 60);  // Subtract 60 days

                if (now >= reminderDate) {
                  // Send email reminder
                  const msg = {
                    to: maintenance.user_id,
                    from: 'myhomeeventssystem@gmail.com',
                    subject: `Maintenance Reminder: ${maintenance.service_performed} - 60 days notice`,
                    text: `
                      Hi there,

                      This is a reminder that the following maintenance task is coming up soon:
                      - **Service:** ${maintenance.service_performed}
                      - **Due Date:** ${followUpDate.toLocaleDateString()}
                      - **Vendor:** ${maintenance.vendor_name || 'Not specified'}
                      - **Phone:** ${maintenance.vendor_phone || 'Not provided'}

                      Please make sure to schedule or prepare accordingly.
                    `
                  };

                  await transporter.sendMail(msg);
                  console.log(`Email sent for ${maintenance.service_performed} to ${maintenance.user_id}`);
                } else {
                  console.log(`No reminder needed for document ${doc.id}.`);
                }
              }
            } catch (error) {
              console.error('Error:', error);
              process.exit(1);
            }

            process.exit(0);
          }

          checkMaintenance();
          EOL

      - name: Install Dependencies
        run: npm install firebase-admin nodemailer

      - name: Run Reminder Script
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}
        run: node check-maintenance.js
