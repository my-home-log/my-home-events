name: Maintenance Email Reminders

on:
  schedule:
    - cron: '0 12 * * *'  # Runs daily at 12:00 PM UTC
  workflow_dispatch:  # Allows manual trigger

jobs:
  check-maintenance:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Create Reminder Script
        run: |
          cat > check-maintenance.js << 'EOL'
          const admin = require('firebase-admin');
          const nodemailer = require('nodemailer');

          const serviceAccount = JSON.parse(process.env.FIREBASE_SERVICE_ACCOUNT);
          admin.initializeApp({
            credential: admin.credential.cert(serviceAccount)
          });

          const transporter = nodemailer.createTransport({
            service: 'gmail',
            auth: {
              user: 'myhomeeventssystem@gmail.com',
              pass: process.env.GMAIL_APP_PASSWORD
            }
          });

          async function checkMaintenance() {
            const db = admin.firestore();
            const now = new Date();
            
            const intervals = [
              { days: 180, label: '6 months' },
              { days: 90, label: '90 days' },
              { days: 7, label: '1 week' }
            ];

            try {
              for (const interval of intervals) {
                const targetDate = new Date(now.getTime() + (interval.days * 24 * 60 * 60 * 1000));
                
                const snapshot = await db.collection('maintenance')
                  .where('follow_up_date', '>=', now)
                  .where('follow_up_date', '<=', targetDate)
                  .where(`${interval.days}DayReminderSent`, '==', false)
                  .orderBy('follow_up_date')
                  .get();

                for (const doc of snapshot.docs) {
                  const maintenance = doc.data();
                  if (!maintenance.follow_up_date) {
                    console.log(`Skipping record ${doc.id} as follow-up date is missing.`);
                    continue;
                  }

                  const msg = {
                    to: maintenance.user_id,
                    from: 'myhomeeventssystem@gmail.com',
                    subject: `Maintenance Reminder: ${maintenance.service_performed} - ${interval.label} notice`,
                    text: `
                      Upcoming maintenance reminder:
                      Service: ${maintenance.service_performed}
                      Due Date: ${new Date(maintenance.follow_up_date).toLocaleDateString()}
                      Vendor: ${maintenance.vendor_name || 'Not specified'}
                      Phone: ${maintenance.vendor_phone || 'Not provided'}
                      
                      This is your ${interval.label} reminder.
                    `
                  };

                  await transporter.sendMail(msg);
                  await doc.ref.update({ [`${interval.days}DayReminderSent`]: true });
                }
              }
            } catch (error) {
              console.error('Error:', error);
              process.exit(1);
            }

            process.exit(0);
          }

          checkMaintenance();
          EOL

      - name: Install Dependencies
        run: npm install firebase-admin nodemailer

      - name: Run Reminder Script
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}
        run: node check-maintenance.js
